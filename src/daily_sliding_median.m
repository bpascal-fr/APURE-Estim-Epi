% Sliding median filtering to remove outlier values from a mutlivariate% signal, independently on each component:%% if | Z(t) - median(Z(s), s in W) | >= alpha * mad(Z(s), s in W), then%%     Replace Z(t) by median(Z(s), s in W),%% where W is a window of odd length centered at t and mad denotes the% median absolute deviation.%%% Implementation: P.Abry, Lyon, December 2009 and modification January 2011%% Reframed and adapted by B. Pascal, J. Du and P. Abry, March 2024%% Exact formula can be found in% - Du, J., Pascal, B., & Abry, P. (2023, August). Compared performance of% Covid19 reproduction number estimators based on realistic synthetic data.% GRETSI’23 XXIXème Colloque Francophone De Traitement Du Signal Et Des% Images.function Zmed = daily_sliding_median(Z,alpha,win)    % Inputs:  - Z: new infection counts stored in a C x T matrix, C number of territories, T number of days    %          - alpha: factor above which values are discarded    %          - win: length of the window, must be odd (15 by default)    %    % Outputs: - Zmed: filtered data    if nargin < 3        win = 15;    end        % half-length of the window    larg = (win - 1) / 2 ;    % number of days    T    = size(Z,2);    % initialize    Zmed = Z ;    % loop on all days, territories treated in parallel    for t = 1:T        % extract data in the window W        Zw       = Z(:,max(t-larg,1):min(t+larg,T));        % compute the median along days        Zwmedian = median(Zw,2);        % compute the median absolute deviation        Zwmad   = mad(Zw,1,2);        % remove outlier values if necessary        Zmed(abs(Z(:,t)-Zwmedian) > alpha * Zwmad,t) = Zwmedian(abs(Z(:,t)-Zwmedian) > alpha * Zwmad);    endend